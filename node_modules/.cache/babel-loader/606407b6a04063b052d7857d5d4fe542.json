{"ast":null,"code":"var _jsxFileName = \"/Users/dayanasog/Desktop/Estudos/GoStack/desafio05/src/pages/Repository/index.js\";\nimport React, { Component } from 'react';\nimport { FaAngleDoubleLeft, FaAngleDoubleRight } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport api from '../../services/api';\nimport { Loading, Owner, IssueList, Pagination, RepositoryState } from './styles';\nimport Container from '../../components/Container';\nexport default class Repository extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      repository: {},\n      issues: [],\n      loading: true,\n      filters: [{\n        state: 'all',\n        label: 'Todas',\n        active: true\n      }, {\n        state: 'open',\n        label: 'Abertas',\n        active: false\n      }, {\n        state: 'closed',\n        label: 'Fechadas',\n        active: false\n      }],\n      filterIndex: 0,\n      page: 1\n    };\n\n    this.handleFilterClick = async filterIndex => {\n      await this.setState({\n        filterIndex\n      });\n      this.loadIssues();\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match\n    } = this.props;\n    const {\n      filters\n    } = this.state;\n    const repoName = decodeURIComponent(match.params.repository);\n    const [repository, issues] = await Promise.all([api.get(`/repos/${repoName}`), api.get(`/repos/${repoName}/issues`, {\n      params: {\n        state: filters.find(f => f.active).state,\n        per_page: 5\n      }\n    })]);\n    this.setState({\n      repository: repository.data,\n      issues: issues.data,\n      loading: false\n    });\n  }\n\n  render() {\n    const {\n      repository,\n      issues,\n      loading\n    } = this.state;\n\n    if (loading) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Carregando\");\n    }\n\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Owner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: `/`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Voltar aos reposit\\xF3rios\"), React.createElement(\"img\", {\n      src: repository.owner.avatar_url,\n      alt: repository.owner.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, repository.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, repository.description)), React.createElement(RepositoryState, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: `/`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Abertas \\xB7\"), React.createElement(Link, {\n      to: `/`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Fechadas \\xB7\"), React.createElement(Link, {\n      to: `/`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Todas\")), React.createElement(IssueList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(IssueFilter, {\n      active: filterIndex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, filters.map((filter, index) => React.createElement(\"button\", {\n      type: \"button\",\n      key: filter.label,\n      onClick: () => this.handleFilterClick(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, filter.label))), issues.map(issue => React.createElement(\"li\", {\n      key: String(issue.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: issue.user.avatar_url,\n      alt: issue.user.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: issue.html_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, issue.title), issue.labels.map(label => React.createElement(\"span\", {\n      key: String(label.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, label.name))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, issue.user.login))))), React.createElement(Pagination, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(FaAngleDoubleLeft, {\n      color: \"#7159c1\",\n      size: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(FaAngleDoubleRight, {\n      color: \"#7159c1\",\n      size: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }))));\n  }\n\n}\nRepository.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      repository: PropTypes.string\n    })\n  }).isRequired\n};","map":{"version":3,"sources":["/Users/dayanasog/Desktop/Estudos/GoStack/desafio05/src/pages/Repository/index.js"],"names":["React","Component","FaAngleDoubleLeft","FaAngleDoubleRight","Link","PropTypes","api","Loading","Owner","IssueList","Pagination","RepositoryState","Container","Repository","state","repository","issues","loading","filters","label","active","filterIndex","page","handleFilterClick","setState","loadIssues","componentDidMount","match","props","repoName","decodeURIComponent","params","Promise","all","get","find","f","per_page","data","render","owner","avatar_url","login","name","description","map","filter","index","issue","String","id","user","html_url","title","labels","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { FaAngleDoubleLeft, FaAngleDoubleRight } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport api from '../../services/api';\n\nimport { Loading, Owner, IssueList, Pagination, RepositoryState } from './styles';\nimport Container from '../../components/Container';\n\nexport default class Repository extends Component {\n  static propTypes = {\n    match: PropTypes.shape({\n      params: PropTypes.shape({\n        repository: PropTypes.string,\n      }),\n    }).isRequired\n  };\n\n  state = {\n    repository: {},\n    issues: [],\n    loading: true,\n    filters: [\n      { state: 'all', label: 'Todas', active: true },\n      { state: 'open', label: 'Abertas', active: false },\n      { state: 'closed', label: 'Fechadas', active: false },\n    ],\n    filterIndex: 0,\n    page: 1,\n  };\n\n  async componentDidMount() {\n    const { match } = this.props;\n\n    const { filters } = this.state;\n\n    const repoName = decodeURIComponent(match.params.repository);\n\n    const [ repository, issues ] = await Promise.all([\n      api.get(`/repos/${repoName}`),\n      api.get(`/repos/${repoName}/issues`, {\n        params: {\n          state: filters.find(f => f.active).state,\n          per_page: 5,\n        }\n      }),\n    ]);\n\n    this.setState({\n      repository: repository.data,\n      issues: issues.data,\n      loading: false,\n    });\n  }\n\n  handleFilterClick = async filterIndex => {\n    await this.setState({ filterIndex });\n    this.loadIssues();\n  };\n\n  render () {\n    const { repository, issues, loading } = this.state;\n\n    if ( loading ) {\n      return <Loading>Carregando</Loading>\n    }\n\n    return (\n      <Container>\n        <Owner>\n          <Link to={`/`}>Voltar aos repositórios</Link>\n          <img src={repository.owner.avatar_url} alt={repository.owner.login}/>\n          <h1>{repository.name}</h1>\n          <p>{repository.description}</p>\n        </Owner>\n\n        <RepositoryState>\n          <Link to={`/`}>Abertas ·</Link>\n          <Link to={`/`}>Fechadas ·</Link>\n          <Link to={`/`}>Todas</Link>\n        </RepositoryState>\n\n        <IssueList>\n          <IssueFilter active={filterIndex}>\n            {filters.map((filter, index) => (\n              <button\n                type=\"button\"\n                key={filter.label}\n                onClick={() => this.handleFilterClick(index)}\n              >\n                {filter.label}\n              </button>\n            ))}\n          </IssueFilter>\n\n          {issues.map(issue => (\n            <li key={String(issue.id)}>\n              <img src={issue.user.avatar_url} alt={issue.user.login}/>\n              <div>\n                <strong>\n                  <a href={issue.html_url}>{issue.title}</a>\n                  {issue.labels.map(label => (\n                    <span key={String(label.id)}>{label.name}</span>\n                  ))}\n                </strong>\n                <p>{issue.user.login}</p>\n              </div>\n            </li>\n          ))}\n        </IssueList>\n\n        <Pagination>\n          <span><FaAngleDoubleLeft color=\"#7159c1\" size={20}/></span>\n          <span><FaAngleDoubleRight color=\"#7159c1\" size={20}/></span>\n        </Pagination>\n      </Container>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}